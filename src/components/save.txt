import React, { useState, useEffect } from 'react';
import axios from 'axios';

const API_URL = 'https://clothing-store-uq04.onrender.com/api/products';

const AdminPage = () => {
  const [products, setProducts] = useState([]);
  const [newProduct, setNewProduct] = useState({ name: '', price: '', description: '', imageUrl: '' });
  const [editingProduct, setEditingProduct] = useState(null);

  useEffect(() => {
    axios.get(API_URL)
      .then(response => setProducts(response.data))
      .catch(error => console.error('Error fetching products:', error));
  }, []);

  const handleAddProduct = async () => {
    if (!newProduct.name || !newProduct.price || !newProduct.description || !newProduct.imageUrl) {
      alert('Please fill out all fields');
      return;
    }

    try {
      const response = await axios.post(API_URL, newProduct, {
        headers: { 'Content-Type': 'application/json' },
      });
      setProducts([...products, response.data]);
      setNewProduct({ name: '', price: '', description: '', imageUrl: '' });
    } catch (error) {
      console.error('Error adding product:', error);
      if (error.response) {
        console.error('Response data:', error.response.data);
      }
    }
  };

  const handleEditProduct = (product) => {
    setEditingProduct(product);
  };

  const handleSaveEdit = async () => {
    try {
      const response = await axios.put(`${API_URL}/${editingProduct._id}`, editingProduct);
      setProducts(products.map(product => product._id === editingProduct._id ? response.data : product));
      setEditingProduct(null);  // Reset editingProduct state
    } catch (error) {
      console.error('Error updating product:', error);
    }
  };

  const handleDeleteProduct = async (id) => {
    try {
      await axios.delete(`${API_URL}/${id}`);
      setProducts(products.filter(product => product._id !== id));
    } catch (error) {
      console.error('Error deleting product:', error);
    }
  };

  return (
    <div>
      <h1>Admin Page</h1>
      <div>
        <input
          type="text"
          placeholder="Name"
          value={newProduct.name}
          onChange={e => setNewProduct({ ...newProduct, name: e.target.value })}
        />
        <input
          type="text"
          placeholder="Price"
          value={newProduct.price}
          onChange={e => setNewProduct({ ...newProduct, price: e.target.value })}
        />
        <button onClick={handleAddProduct}>Add Product</button>
      </div>
      <div>
        <textarea
          placeholder="Description"
          value={newProduct.description}
          onChange={e => setNewProduct({ ...newProduct, description: e.target.value })}
        />
        <input
          type="text"
          placeholder="Image URL"
          value={newProduct.imageUrl}
          onChange={e => setNewProduct({ ...newProduct, imageUrl: e.target.value })}
        />
      </div>

      {products.map(product => (
        <div key={product._id}>
          {editingProduct && editingProduct._id === product._id ? (
            <>
              <input
                type="text"
                placeholder="Name"
                value={editingProduct.name}
                onChange={e => setEditingProduct({ ...editingProduct, name: e.target.value })}
              />
              <input
                type="text"
                placeholder="Price"
                value={editingProduct.price}
                onChange={e => setEditingProduct({ ...editingProduct, price: e.target.value })}
              />
              <textarea
                placeholder="Description"
                value={editingProduct.description}
                onChange={e => setEditingProduct({ ...editingProduct, description: e.target.value })}
              />
              <input
                type="text"
                placeholder="Image URL"
                value={editingProduct.imageUrl}
                onChange={e => setEditingProduct({ ...editingProduct, imageUrl: e.target.value })}
              />
              <button onClick={handleSaveEdit}>Save</button>
              <button onClick={() => setEditingProduct(null)}>Cancel</button>
            </>
          ) : (
            <>
              <h2>{product.name}</h2>
              <p>{product.description}</p>
              <p>${product.price}</p>
              <button onClick={() => handleEditProduct(product)}>Update</button>
              <button onClick={() => handleDeleteProduct(product._id)}>Delete</button>
            </>
          )}
        </div>
      ))}
    </div>
  );
};

export default AdminPage;